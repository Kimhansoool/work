{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport getDefaultSlice from '../helper/ReduxHelper';\nimport axios from 'axios';\nimport { rest } from 'lodash';\nconst API_URL = '/communityList';\n\n/** Ajax처리를 위한 미들웨어 함수 정의 */\nexport const getList = createAsyncThunk(\"CommunityListSlice/getList\", async (payload, {\n  rejectWithValue\n}) => {\n  let result = null;\n  try {\n    // /api/paiksMenu?category=payload.kkk의값\n    const response = await axios.get(API_URL);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\nexport const getItem = createAsyncThunk(\"CommunityListSlice/getItem\", async (payload, {\n  rejectWithValue\n}) => {\n  let result = null;\n  try {\n    const response = await axios.get(`${API_URL}/${payload === null || payload === void 0 ? void 0 : payload.id}`);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\nexport const postItem = createAsyncThunk(\"CommunityListSlice/postItem\", async (payload, {\n  rejectWithValue\n}) => {\n  let result = null;\n  try {\n    const response = await axios.post(API_URL, payload);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\nexport const putItem = createAsyncThunk(\"CommunityListSlice/putItem\", async (payload, {\n  rejectWithValue\n}) => {\n  let result = null;\n  const {\n    id,\n    ...rest\n  } = payload;\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, rest);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\nexport const deleteItem = createAsyncThunk(\"CommunityListSlice/deleteItem\", async (payload, {\n  rejectWithValue\n}) => {\n  let result = null;\n  try {\n    const response = await axios.delete(`${API_URL}/${payload === null || payload === void 0 ? void 0 : payload.id}`);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\nconst CommunityListSlice = getDefaultSlice(\"CommunityListSlice\", [getList, getItem, postItem, putItem, deleteItem]);\nexport default CommunityListSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","getDefaultSlice","axios","rest","API_URL","getList","payload","rejectWithValue","result","response","get","data","err","getItem","id","postItem","post","putItem","put","deleteItem","delete","CommunityListSlice","reducer"],"sources":["D:/work/tomorrow_project/src/slices/CommunityListSlice.js"],"sourcesContent":["import {createAsyncThunk } from '@reduxjs/toolkit'\r\nimport getDefaultSlice from '../helper/ReduxHelper';\r\nimport axios from 'axios';\r\nimport { rest } from 'lodash';\r\n\r\nconst API_URL = '/communityList';\r\n\r\n/** Ajax처리를 위한 미들웨어 함수 정의 */\r\nexport const getList = createAsyncThunk(\"CommunityListSlice/getList\", async (payload, { rejectWithValue }) => {\r\n    let result = null;\r\n\r\n    try {\r\n        // /api/paiksMenu?category=payload.kkk의값\r\n        const response = await axios.get(API_URL);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n\r\n    return result;\r\n});\r\n\r\nexport const getItem = createAsyncThunk(\"CommunityListSlice/getItem\", async (payload, { rejectWithValue }) => {\r\n    let result = null;\r\n\r\n    try {\r\n        const response = await axios.get(`${API_URL}/${payload?.id}`);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n\r\n    return result;\r\n});\r\n\r\nexport const postItem = createAsyncThunk(\"CommunityListSlice/postItem\", async (payload, { rejectWithValue }) => {\r\n    let result = null;\r\n\r\n    try {\r\n        const response = await axios.post(API_URL, payload);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n\r\n    return result;\r\n});\r\n\r\nexport const putItem = createAsyncThunk(\"CommunityListSlice/putItem\", async (payload, { rejectWithValue }) => {\r\n    let result = null;\r\n    const {id, ...rest} = payload;\r\n\r\n    try {\r\n        const response = await axios.put(`${API_URL}/${id}`, rest);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n\r\n    return result;\r\n});\r\n\r\nexport const deleteItem = createAsyncThunk(\"CommunityListSlice/deleteItem\", async (payload, { rejectWithValue }) => {\r\n    let result = null;\r\n\r\n    try {\r\n        const response = await axios.delete(`${API_URL}/${payload?.id}`);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n\r\n    return result;\r\n});\r\n\r\nconst CommunityListSlice = getDefaultSlice(\"CommunityListSlice\", [getList, getItem, postItem, putItem, deleteItem]);\r\n\r\nexport default CommunityListSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}